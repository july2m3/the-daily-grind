{"version":3,"sources":["components/Title.tsx","components/ListItem.tsx","components/List.tsx","App.tsx","index.tsx"],"names":["Title","props","today","className","ListItem","item","handleClick","itemsToDisplay","Object","keys","forEach","key","push","listOfTasks","map","i","onClick","title","List","list","listItems","options","eachItem","days","months","App","toggleChecked","target","newOptions","state","length","setState","todaysDate","this","listOfOptions","Date","currentDay","getDate","currentWeekDay","getDay","currentMonth","getMonth","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAaeA,EAXD,SAACC,GAAgB,IACrBC,EAAUD,EAAVC,MACR,OACE,4BAAQC,UAAU,SAChB,2DACA,wBAAIA,UAAU,OACXD,KCgCME,EApCE,SAACH,GAAe,IACvBI,EAAsBJ,EAAtBI,KAAMC,EAAgBL,EAAhBK,YACRC,EAAyB,GAE/BC,OAAOC,KAAKJ,GAAMK,SAAQ,SAACC,GACb,UAARA,GACFJ,EAAeK,KAAf,UAAuBD,OAI3B,IAAME,EAAeN,EACnBA,EAAeO,KAAI,SAACC,GAAD,OACjB,wBACEJ,IAAKI,EACLZ,UAAU,QACVa,QAAS,WACPV,EAAYS,KAGd,uBAAGZ,UAAWE,EAAKU,GAAK,sBAAwB,kBAC/CA,MAV+B,KAatC,OACE,oCACE,wBAAIZ,UAAU,eACXE,EAAKY,MACL,IACD,uBAAGd,UAAU,wBAEdU,ICnBQK,MAXf,SAAcjB,GAAa,IACjBkB,EAAsBlB,EAAtBkB,KAAMb,EAAgBL,EAAhBK,YACRc,EAAYD,EAAKE,QAAUF,EAAKE,QAAQP,KAAI,SAACQ,GAAD,OAAkB,kBAAC,EAAD,CAAUjB,KAAMiB,EAAUX,IAAKW,EAASL,MAAOX,YAAaA,OAAmB,KAEnJ,OACE,yBAAKH,UAAU,QACZiB,I,OCDDG,G,MAAO,CACX,SACA,SACA,UACA,YACA,WACA,SACA,aAEIC,EAAS,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAuDaC,E,kDA7Cb,WAAYxB,GAAgB,IAAD,8BACzB,cAAMA,IAoBRyB,cAAgB,SAACC,GAEf,IAFmC,IAClBC,EAAe,EAAKC,MAA7BR,QAD0B,WAEzBN,GACPP,OAAOC,KAAKmB,EAAWP,QAAQN,IAAIL,SAAQ,SAACC,GACtCA,IAAQgB,IACVC,EAAWP,QAAQN,GAAGJ,IAAQiB,EAAWP,QAAQN,GAAGJ,QAHjDI,EAAI,EAAGA,EAAIa,EAAWP,QAAQS,OAAQf,IAAM,EAA5CA,GAQT,EAAKgB,UAAS,iBAAO,CAAEV,QAASO,OA7BhC,EAAKC,MAAQ,CACXR,QAAS,GACTW,WAAY,IAJW,E,gEASzBC,KAAKF,UAAS,iBAAO,CACnBV,QAASa,MAEX,IAAMhC,EAAQ,IAAIiC,KACZC,EAAalC,EAAMmC,UACnBC,EAAiBf,EAAKrB,EAAMqC,UAC5BC,EAAehB,EAAOtB,EAAMuC,YAC5BxB,EAAK,UAAMqB,EAAN,aAAyBE,EAAzB,YAAyCJ,EAAzC,KAEXH,KAAKF,UAAS,iBAAO,CAAEC,WAAYf,Q,+BAgB3B,IAAD,EACyBgB,KAAKJ,MAA7BG,EADD,EACCA,WAAYX,EADb,EACaA,QACpB,OACE,yBAAKlB,UAAU,OACb,kBAAC,EAAD,CAAOD,MAAO8B,IACd,kBAAC,EAAD,CAAMb,KAAME,EAASf,YAAa2B,KAAKP,qB,GAxC7BgB,IAAMC,WCnCxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.80982e08.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = (props: any) => {\n  const { today } = props;\n  return (\n    <header className='title'>\n      <h1>☕The Daily Grind☕</h1>\n      <h3 className='red'>\n        {today}\n      </h3>\n    </header>\n  );\n};\nexport default Title;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\n\nconst ListItem = (props:any) => {\n  const { item, handleClick } = props;\n  const itemsToDisplay : any[] = [];\n\n  Object.keys(item).forEach((key) => {\n    if (key !== 'title') {\n      itemsToDisplay.push(`${key}`);\n    }\n  });\n\n  const listOfTasks = !itemsToDisplay ? null :\n    itemsToDisplay.map((i:any) => (\n      <li\n        key={i}\n        className='tasks'\n        onClick={() => {\n          handleClick(i);\n        }}\n      >\n        <i className={item[i] ? ' fa fa-check-square' : 'far fa-square'} />\n        {i}\n      </li>\n    ));\n  return (\n    <>\n      <li className='list-titles'>\n        {item.title}\n        {' '}\n        <i className='fas fa-caret-right' />\n      </li>\n      {listOfTasks}\n    </>\n  );\n};\n\n\nexport default ListItem;\n","import React from 'react';\n\nimport ListItem from './ListItem';\n\nfunction List(props: any) {\n  const { list, handleClick } = props;\n  const listItems = list.options ? list.options.map((eachItem:any) => <ListItem item={eachItem} key={eachItem.title} handleClick={handleClick} />) : null;\n\n  return (\n    <div className='list'>\n      {listItems}\n    </div>\n  );\n}\n\nexport default List;\n","import React from 'react';\n\nimport Title from './components/Title';\nimport List from './components/List';\n\nimport listOfOptions from './options.json';\n\nimport './style.css';\n\nconst days = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n];\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\ninterface IProps {}\ninterface IState {\n  options: any;\n  todaysDate: string;\n}\n\nclass App extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      options: {},\n      todaysDate: '',\n    };\n  }\n\n  componentDidMount() {\n    this.setState(() => ({\n      options: listOfOptions,\n    }));\n    const today = new Date();\n    const currentDay = today.getDate();\n    const currentWeekDay = days[today.getDay()];\n    const currentMonth = months[today.getMonth()];\n    const title = `${currentWeekDay}, ${currentMonth} ${currentDay} `;\n\n    this.setState(() => ({ todaysDate: title }));\n  }\n\n  toggleChecked = (target: String) => {\n    const { options: newOptions } = this.state;\n    for (let i = 0; i < newOptions.options.length; i++) {\n      Object.keys(newOptions.options[i]).forEach((key: any) => {\n        if (key === target) {\n          newOptions.options[i][key] = !newOptions.options[i][key];\n        }\n      });\n    }\n\n    this.setState(() => ({ options: newOptions }));\n  };\n\n  render() {\n    const { todaysDate, options } = this.state;\n    return (\n      <div className=\"App\">\n        <Title today={todaysDate} />\n        <List list={options} handleClick={this.toggleChecked} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}